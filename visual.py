import pygame
from pygame.locals import *
from OpenGL.GL import *
from OpenGL.GLU import *

verticies = (
	#basic corners
	(3, -3, -3),
	(3, 3, -3),
	(-3, 3, -3),
	(-3, -3, -3),
	(3, -3, 3),
	(3, 3, 3),
	(-3, -3, 3),
	(-3, 3, 3),
	#front
	(-1, 3, 3),
	(1, 3, 3),
	(-3, 1, 3),
	(-1, 1, 3),
	(1, 1, 3),
	(3, 1, 3),
	(-3, -1, 3),
	(-1, -1, 3),
	(1, -1, 3),
	(3, -1, 3),
	(-1, -3, 3),
	(1, -3, 3),
	#right
	(3, 3, 1),
	(3, 3, -1),
	(3, 1, 1),
	(3, 1, -1),
	(3, 1, -3),
	(3, -1, 1),
	(3, -1, -1),
	(3, -1, -3),
	(3, -3, 1),
	(3, -3, -1),
	#back
	(1, 3, -3),
	(-1, 3, -3),
	(1, 1, -3),
	(-1, 1, -3),
	(-3, 1, -3),
	(1, -1, -3),
	(-1, -1, -3),
	(-3, -1, -3),
	(1, -3, -3),
	(-1, -3, -3),
	#left
	(-3, 3, 1),
	(-3, 3, -1),
	(-3, 1, 1),
	(-3, 1, -1),
	(-3, -1, 1),
	(-3, -1, -1),
	(-3, -3, 1),
	(-3, -3, -1),
	#up
	(-1, 3, -1),
	(1, 3, -1),
	(-1, 3, 1),
	(1, 3, 1),
	#down
	(-1, -3, -1),
	(1, -3, -1),
	(-1, -3, 1),
	(1, -3, 1),
	#angle gauche face back oublies
	(3, 1, -3),
	(3, -1, -3)
	)

edges = (
	(0, 1),
	(0, 3),
	(0, 4),
	(2, 1),
	(2, 3),
	(2, 7),
	(6, 3),
	(6, 4),
	(6, 7),
	(5, 1),
	(5, 4),
	(5, 7),
	#
	(7, 8),
	(7, 10),
	(8, 9),
	(8, 11),
	(9, 5),
	(9, 12),
	(10, 14),
	(10, 11),
	(11, 12),
	(12, 13),
	(11, 15),
	(12, 16),
	(13, 17),
	(13, 5),
	(17, 4),
	(16, 19),
	(18, 19),
	(15, 18),
	(6, 18),
	(14, 15),
	(15, 16),
	(16, 17),
	#
	(5, 20),
	(13, 22),
	(17, 25),
	(4, 28),
	(20, 21),
	(21, 1),
	(20, 22),
	(21, 23),
	(1, 24),
	(22, 23),
	(23, 24),
	(22, 25),
	(23, 26),
	(24, 27),
	(25, 28),
	(25, 26),
	(26, 27),
	(26, 29),
	(27, 0),
	(29, 0),
	(28, 29),
	#
	(1, 30),
	(0, 38),
	(24, 32),
	(27, 35),
	(30, 31),
	(31, 2),
	(32, 33),
	(33, 34),
	(35, 36),
	(36, 37),
	(38, 39),
	(39, 3),
	(30, 32),
	(31, 33),
	(2, 34),
	(32, 35),
	(33, 36),
	(34, 37),
	(35, 38),
	(36, 39),
	#
	(45, 14),
	(42, 10),
	(44, 14),
	(2, 40),
	(3, 46),
	(40, 42),
	(42, 44),
	(44, 46),
	(41, 43),
	(43, 45),
	(45, 47),
	(40, 41),
	(42, 43),
	(44, 45),
	(46, 47),
	(41, 7),
	(43, 34),
	(45, 37),
	#
	(48, 49),
	(48, 50),
	(49, 51),
	(50, 51),
	(40, 50),
	(41, 48),
	(49, 21),
	(51, 20),
	(48, 31),
	(30, 49),
	(50, 8),
	(51, 9),
	#
	(52, 53),
	(54, 55),
	(52, 54),
	(53, 55),
	(47, 52),
	(46, 54),
	(53, 29),
	(55, 28),
	(53, 38),
	(52, 39),
	(54, 18),
	(55, 19),
	)

surfaces = (
	# Front
	(7, 8, 11, 10),
	(8, 9, 12, 11),
	(11, 12, 16, 15),
	(10, 11, 15, 14),
	(14, 15, 18, 6),
	(9, 5, 13, 12),
	(12, 13, 17, 16),
	(16, 17, 4, 19),
	(15, 16, 19, 18),
	# Right
	(5, 20, 22, 13),
	(20, 21, 23, 22),
	(13, 22, 25, 17),
	(17, 25, 28, 4),
	(25, 26, 29, 28),
	(22, 23, 26, 25),
	(20, 21, 23, 22),
	(26, 27, 0, 29),
	(23, 24, 27, 26),
	(21, 1, 24, 23),
	# Back
	(1, 30, 32, 24),
	(30, 31, 33, 32),
	(31, 2, 34, 33),
	(24, 32, 35, 27),
	(27, 35, 38, 0),
	(35, 36, 39, 38),
	(36, 37, 3, 39),
	(32, 33, 36, 35),
	(33, 34, 37, 36),
	# Left
	(7, 41, 43, 10),
	(41, 40, 42, 43),
	(40, 2, 34, 42),
	(42, 34, 37, 44),
	(43, 42, 44, 45),
	(45, 44, 46, 47), #
	(46, 52, 54, 47), #
	(44, 37, 3, 46),
	(14, 45, 47, 6),
	(10, 43, 45, 14),
	#(2, 40, 42, 34), #OLD
	#(34, 42, 44, 37),
	#(37, 44, 46, 3),
	#(40, 41, 43, 42),
	#(42, 43, 45, 44),
	#(44, 45, 47, 46),
	#(41, 7, 10, 43), #41 7 10 43
	#(43, 10, 14, 45), #43 10 14 45
	#(45, 14, 6, 47),
	# Up
	(2, 31, 48, 40),
	(40, 48, 50, 41),
	(30, 1, 21, 49), #30 1 56 4    #31 1 21 499
	(49, 21, 20, 51),
	(51, 20, 5, 9),
	(50, 51, 9, 8),
	(41, 50, 8, 7),
	(31, 30, 49, 48),
	(48, 49, 51, 50),
	# OLD
	#(2, 31, 38, 40),
	#(40, 48, 50, 41),
	#(41, 50, 8, 7),
	#(31, 30, 49, 48),
	#(48, 49, 51, 50),
	#(49, 21, 20, 51),
	#(51, 20, 5, 9),
	#(50, 51, 9, 8),
	# Down
	(3, 39, 52, 46),
	(39, 38, 53, 52),
	(38, 0, 29, 53),
	(53, 29, 28, 55),
	(55, 28, 4, 19),
	(54, 55, 19, 18),
	(46, 54, 18, 6),
	#(46, 52, 54, 47),
	(52, 53, 55, 54),
	)

colors = (
	(1, 0, 0), #red
	(0, 0, 1), #blue
	(1, 1, 1), #white
	(1, 0.5, 0), #orange
	(0, 1, 0), #green
	(1, 1, 0) #yellow
	)

def Cube():
	#----------------------------------------
	# Remplissage de surfaces + couleurs
	glBegin(GL_QUADS)
	black = (0, 0, 0)
	i = 0
	for surface in surfaces:
		for vertex in surface:
			glVertex3fv(verticies[vertex])
		glColor3fv(colors[i])
		if i < 5:
			i += 1
		else:
			i = 0
	glEnd()
	#----------------------------------------

	#----------------------------------------
	# Tracage des contours des cubes
	glBegin(GL_LINES)
	for edge in edges:
		for vertex in edge:
			glColor3fv(black)
			glVertex3fv(verticies[vertex])
	#----------------------------------------
	glEnd()

def	main_visual(c, mix):
	pygame.init()
	display = (800, 600)
	pygame.display.set_mode(display, DOUBLEBUF|OPENGL)
	gluPerspective(90, (display[0]/display[1]), 0.1, 50.0)
	glTranslatef(0, 0, -8)
	opaque = 1
	glEnable(GL_DEPTH_TEST)
	turn = -1
	x = 1
	y = 1
	while True:
		for event in pygame.event.get():
			if event.type == pygame.QUIT:
				pygame.quit()
				quit()
			if event.type == pygame.KEYDOWN:
				if event.key == pygame.K_ESCAPE:
					pygame.quit()
					quit()
				if event.key == pygame.K_o:
					opaque *= -1
				if event.key == pygame.K_SPACE:
					turn *= -1
				if event.key == pygame.K_LEFT:
					x = -1
				if event.key == pygame.K_RIGHT:
					x = 1
				if event.key == pygame.K_UP:
					y = 3
				if event.key == pygame.K_DOWN:
					y = -3
				#turn *= -1
		if opaque < 0:
			glDisable(GL_DEPTH_TEST)
		if opaque > 0:
			glEnable(GL_DEPTH_TEST)
		if turn > 0:
			glRotatef(1, x, y, 1)
		glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
		Cube()
		pygame.display.flip()
		pygame.time.wait(7)
